stages:
  - compile
  - test
  - sonar
  - package
  - build_docker
  - deploy

before_script:
  - export no_proxy=10.52.140.222
  - cp settings.xml /root/.m2/settings.xml

variables:
  MAVEN_CLI_OPTS: "-s /root/.m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=/root/.m2/repository"
  PROJECT_NAME: envolvimento-justica-service-worker
  PROJECT_GROUP: pessoal
  PROJECT_NAMESPACE: sigpes-ng
  RANCHER_KEY: $CI_RANCHER_SISTEMAS_KEY
  RANCHER_SECRET: $CI_RANCHER_SISTEMAS_SECRET
  RANCHER_URL: "https://rancher.ccarj.sti.intraer"
  REGISTRY_URL: "registry.ccarj.intraer"
  ACCESS_TOKEN: $CI_ACCESS_TOKEN
  DEPLOY_VERSION: $CI_COMMIT_TAG
  K8S_CLUSTER: dev

cache:
  paths:
    - /root/.m2/repository
    - target/
  key: "$CI_COMMIT_SHA"

compile:
  stage: compile
  tags:
    - docker
  image: registry.ccarj.intraer/mirror/library/maven:3.8.5-openjdk-17
  script:
    - mvn $MAVEN_CLI_OPTS clean compile -P k8s

test:
  except:
    - main
  tags:
    - docker
  image: registry.ccarj.intraer/mirror/library/maven:3.8.5-openjdk-17
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS test

sonar:
  only:
    - develop
  stage: sonar
  image: registry.ccarj.intraer/mirror/library/maven:3.8.5-openjdk-17
  script:
    - mvn $MAVEN_CLI_OPTS sonar:sonar -Dsonar.host.url=http://sonar.ccarj.intraer/ -Dsonar.login=squ_afafc4f15b9dda1763a0a201f53bf4c547acee6d

package:
  stage: package
  tags:
    - docker
  image: registry.ccarj.intraer/mirror/library/maven:3.8.5-openjdk-17
  script:
    - mvn $MAVEN_CLI_OPTS clean package -Dmaven.test.skip=true -Pk8s
  artifacts:
    paths:
      - target/*.jar

build_docker:
  stage: build_docker
  tags:
    - shell
  dependencies:
    - package
  image: registry.ccarj.intraer/mirror/library/docker:20.10.16
  services:
    - docker:20.10.16-dind
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        DEPLOY_VERSION: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == "develop"
      variables:
        DEPLOY_VERSION: dev-$CI_COMMIT_SHORT_SHA
    - if: '$CI_COMMIT_REF_NAME =~ /^release\/\d+\.\d+\.\d+$/'
      variables:
        DEPLOY_VERSION: rc-$CI_COMMIT_SHORT_SHA
  before_script: []
  script:
    - echo $DEPLOY_VERSION
    - docker build -t registry.ccarj.intraer/$PROJECT_NAMESPACE/$PROJECT_NAME:$DEPLOY_VERSION .
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin registry.ccarj.intraer
    - docker push registry.ccarj.intraer/$PROJECT_NAMESPACE/$PROJECT_NAME:$DEPLOY_VERSION

deploy:
  stage: deploy
  tags:
    - docker
  image:
    name: registry.ccarj.intraer/arquitetura/rancher-deployer:1.0.2
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        DEPLOY_VERSION: $CI_COMMIT_TAG
        K8S_CLUSTER: "prd"
    - if: $CI_COMMIT_BRANCH == "develop"
      variables:
        DEPLOY_VERSION: dev-$CI_COMMIT_SHORT_SHA
    - if: '$CI_COMMIT_REF_NAME =~ /^release\/\d+\.\d+\.\d+$/'
      variables:
        DEPLOY_VERSION: rc-$CI_COMMIT_SHORT_SHA
        K8S_CLUSTER: "sta"
  before_script: []
  script:
    - echo "Cluster:' $K8S_CLUSTER"
    - echo "Deploy version:' $DEPLOY_VERSION"
    - 'rancher-deployer deploy --rancher-url=$RANCHER_URL --rancher-key=$RANCHER_KEY --rancher-secret=$RANCHER_SECRET --cluster=development --project=$PROJECT_GROUP --namespace=$PROJECT_NAMESPACE --deployment=$PROJECT_NAME --image=$REGISTRY_URL/$PROJECT_NAMESPACE/$PROJECT_NAME:$DEPLOY_VERSION --no-ssl-verify'
